{"version":3,"sources":["webpack:///../src/hooks/useColors.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"uPAMaA,G,UAAe,S,yMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,aADR,aAGA,4BAAW,0BAAYC,WAAW,KAAvB,aAAX,kFACA,iBAAQ,CACN,GAAM,UADR,UAGA,qBAAG,sBAAQA,WAAW,KAAnB,aACH,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,4DAIL,qBAAG,sBAAQA,WAAW,KAAnB,UACH,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,wDAIL,qBAAG,sBAAQA,WAAW,KAAnB,QAAgC,0BAAYA,WAAW,UAAvB,UAAhC,4DACH,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,wEAQL,iBAAQ,CACN,GAAM,eADR,eAGA,uEACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,2NAcL,iBAAQ,CACN,GAAM,YADR,YAGA,oDACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,sGAUL,iBAAQ,CACN,GAAM,aADR,aAGA,qHACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,mK,uMAaTJ,EAAWK,gBAAiB","file":"component---src-hooks-use-colors-mdx-59d7df3fa73010ce1ea7.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kellymears/code/projects/cli/bud/bud-sandbox/web/app/themes/wp-react-hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"usecolors\"\n    }}>{`useColors`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`useColors`}</inlineCode>{` hook provides an interface for consuming and modifying block editor settings.`}</p>\n    <h2 {...{\n      \"id\": \"basics\"\n    }}>{`Basics`}</h2>\n    <p><strong parentName=\"p\">{` Import `}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {useColors} from '@tinypixelco/wp-react-hooks'\n`}</code></pre>\n    <p><strong parentName=\"p\">{` Use `}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const {colors, setColors, addColor} = useColors()\n`}</code></pre>\n    <p><strong parentName=\"p\">{` The `}<inlineCode parentName=\"strong\">{`colors`}</inlineCode>{` array is made up of objects that are shaped like this `}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`{\n  name: \"Primary\",\n  slug: \"primary\",\n  color: \"#0073a8\",\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"list-colors\"\n    }}>{`List colors`}</h2>\n    <p>{`List all the colors registered with WordPress.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {useColors} from '@tinypixelco/wp-react-hooks'\n\nconst component = () => {\n  const [colors, setColors] = useColors()\n\n  return (\n    <div>\n      {colors && JSON.stringify(colors)}\n    </div>\n  )\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"addcolor\"\n    }}>{`addColor`}</h2>\n    <p>{`Add a color to the palette.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`{addColor} = useColors()\n\naddColor({\n  name: \"New\",\n  slug: \"new\",\n  color: \"#0073a8\",\n})\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setcolors\"\n    }}>{`setColors`}</h2>\n    <p>{`Replace the palette with a new one, or otherwise process the array and return what you like.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`{setColors} = useColors()\n\nsetColors([\n  {name: 'black', slug: 'black', color: '#000000'},\n  {name: 'white', slug: 'white', color: '#ffffff'},\n])\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}