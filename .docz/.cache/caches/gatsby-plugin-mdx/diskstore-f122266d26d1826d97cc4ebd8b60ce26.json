{"expireTime":9007200849324592000,"key":"gatsby-plugin-mdx-entire-payload-456c69103b98faf6c06103e198ffd56b-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/kellymears/code/projects/cli/bud/bud-sandbox/web/app/themes/wp-react-hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":160,"offset":161},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":163},"end":{"line":5,"column":29,"offset":191},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"useColors","position":{"start":{"line":8,"column":3,"offset":196},"end":{"line":8,"column":12,"offset":205},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":194},"end":{"line":8,"column":12,"offset":205},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":10,"column":1,"offset":207},"end":{"line":10,"column":5,"offset":211},"indent":[]}},{"type":"inlineCode","value":"useColors","position":{"start":{"line":10,"column":5,"offset":211},"end":{"line":10,"column":16,"offset":222},"indent":[]}},{"type":"text","value":" hook provides an interface for consuming and modifying block editor settings.","position":{"start":{"line":10,"column":16,"offset":222},"end":{"line":10,"column":94,"offset":300},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":207},"end":{"line":10,"column":94,"offset":300},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Basics","position":{"start":{"line":12,"column":4,"offset":305},"end":{"line":12,"column":10,"offset":311},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":302},"end":{"line":12,"column":10,"offset":311},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"import {useColors} from '@tinypixelco/wp-react-hooks'","position":{"start":{"line":14,"column":1,"offset":313},"end":{"line":16,"column":4,"offset":377},"indent":[1,1]}},{"type":"code","lang":"jsx","meta":null,"value":"const {colors, setColors, addColor} = useColors()","position":{"start":{"line":18,"column":1,"offset":379},"end":{"line":20,"column":4,"offset":439},"indent":[1,1]}},{"type":"code","lang":"jsx","meta":null,"value":"{\n  name: \"Primary\",\n  slug: \"primary\",\n  color: \"#0073a8\",\n}","position":{"start":{"line":23,"column":1,"offset":442},"end":{"line":29,"column":4,"offset":514},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"List colors","position":{"start":{"line":31,"column":4,"offset":519},"end":{"line":31,"column":15,"offset":530},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":516},"end":{"line":31,"column":15,"offset":530},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"List all the colors registered with WordPress.","position":{"start":{"line":33,"column":1,"offset":532},"end":{"line":33,"column":47,"offset":578},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":532},"end":{"line":33,"column":47,"offset":578},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"import {useColors} from '@tinypixelco/wp-react-hooks'\n\nconst component = () => {\n  const [colors, setColors] = useColors()\n\n  return (\n    <div>\n      {colors && JSON.stringify(colors)}\n    </div>\n  )\n}","position":{"start":{"line":35,"column":1,"offset":580},"end":{"line":47,"column":4,"offset":793},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"addColor","position":{"start":{"line":49,"column":4,"offset":798},"end":{"line":49,"column":12,"offset":806},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":795},"end":{"line":49,"column":12,"offset":806},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Add a color to the palette.","position":{"start":{"line":51,"column":1,"offset":808},"end":{"line":51,"column":28,"offset":835},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":808},"end":{"line":51,"column":28,"offset":835},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"{addColor} = useColors()\n\naddColor({\n  name: \"New\",\n  slug: \"new\",\n  color: \"#0073a8\",\n})","position":{"start":{"line":53,"column":1,"offset":837},"end":{"line":61,"column":4,"offset":937},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"setColors","position":{"start":{"line":63,"column":4,"offset":942},"end":{"line":63,"column":13,"offset":951},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":939},"end":{"line":63,"column":13,"offset":951},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Replace the palette with a new one, or otherwise process the array and return what you like.","position":{"start":{"line":65,"column":1,"offset":953},"end":{"line":65,"column":93,"offset":1045},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":953},"end":{"line":65,"column":93,"offset":1045},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"{setColors} = useColors()\n\nsetColors([\n  {name: 'black', slug: 'black', color: '#000000'},\n  {name: 'white', slug: 'white', color: '#ffffff'},\n])","position":{"start":{"line":67,"column":1,"offset":1047},"end":{"line":74,"column":4,"offset":1203},"indent":[1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":76,"column":1,"offset":1205},"end":{"line":76,"column":31,"offset":1235},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":76,"column":31,"offset":1235}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/kellymears/code/projects/cli/bud/bud-sandbox/web/app/themes/wp-react-hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"usecolors\"\n    }}>{`useColors`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`useColors`}</inlineCode>{` hook provides an interface for consuming and modifying block editor settings.`}</p>\n    <h2 {...{\n      \"id\": \"basics\"\n    }}>{`Basics`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {useColors} from '@tinypixelco/wp-react-hooks'\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const {colors, setColors, addColor} = useColors()\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`{\n  name: \"Primary\",\n  slug: \"primary\",\n  color: \"#0073a8\",\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"list-colors\"\n    }}>{`List colors`}</h2>\n    <p>{`List all the colors registered with WordPress.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {useColors} from '@tinypixelco/wp-react-hooks'\n\nconst component = () => {\n  const [colors, setColors] = useColors()\n\n  return (\n    <div>\n      {colors && JSON.stringify(colors)}\n    </div>\n  )\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"addcolor\"\n    }}>{`addColor`}</h2>\n    <p>{`Add a color to the palette.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`{addColor} = useColors()\n\naddColor({\n  name: \"New\",\n  slug: \"new\",\n  color: \"#0073a8\",\n})\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setcolors\"\n    }}>{`setColors`}</h2>\n    <p>{`Replace the palette with a new one, or otherwise process the array and return what you like.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`{setColors} = useColors()\n\nsetColors([\n  {name: 'black', slug: 'black', color: '#000000'},\n  {name: 'white', slug: 'white', color: '#ffffff'},\n])\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}