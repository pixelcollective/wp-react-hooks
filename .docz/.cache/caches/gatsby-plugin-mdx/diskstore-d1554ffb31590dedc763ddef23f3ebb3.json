{"expireTime":9007200849324604000,"key":"gatsby-plugin-mdx-entire-payload-0b7aef50a2f96ff94c0b819ebca08903-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/kellymears/code/projects/cli/bud/bud-sandbox/web/app/themes/wp-react-hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":160,"offset":161},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":163},"end":{"line":5,"column":29,"offset":191},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"useColors","position":{"start":{"line":8,"column":3,"offset":196},"end":{"line":8,"column":12,"offset":205},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":194},"end":{"line":8,"column":12,"offset":205},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":10,"column":1,"offset":207},"end":{"line":10,"column":5,"offset":211},"indent":[]}},{"type":"inlineCode","value":"useColors","position":{"start":{"line":10,"column":5,"offset":211},"end":{"line":10,"column":16,"offset":222},"indent":[]}},{"type":"text","value":" hook provides an interface for consuming and modifying block editor settings.","position":{"start":{"line":10,"column":16,"offset":222},"end":{"line":10,"column":94,"offset":300},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":207},"end":{"line":10,"column":94,"offset":300},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Basics","position":{"start":{"line":12,"column":4,"offset":305},"end":{"line":12,"column":10,"offset":311},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":302},"end":{"line":12,"column":10,"offset":311},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" Import ","position":{"start":{"line":14,"column":3,"offset":315},"end":{"line":14,"column":11,"offset":323},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":313},"end":{"line":14,"column":13,"offset":325},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":313},"end":{"line":14,"column":13,"offset":325},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"import {useColors} from '@tinypixelco/wp-react-hooks'","position":{"start":{"line":16,"column":1,"offset":327},"end":{"line":18,"column":4,"offset":391},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" Use ","position":{"start":{"line":20,"column":3,"offset":395},"end":{"line":20,"column":8,"offset":400},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":393},"end":{"line":20,"column":10,"offset":402},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":393},"end":{"line":20,"column":10,"offset":402},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"const {colors, setColors, addColor} = useColors()","position":{"start":{"line":22,"column":1,"offset":404},"end":{"line":24,"column":4,"offset":464},"indent":[1,1]}},{"type":"code","lang":"jsx","meta":null,"value":"{\n  name: \"Primary\",\n  slug: \"primary\",\n  color: \"#0073a8\",\n}","position":{"start":{"line":26,"column":1,"offset":466},"end":{"line":32,"column":4,"offset":538},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"List colors","position":{"start":{"line":34,"column":4,"offset":543},"end":{"line":34,"column":15,"offset":554},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":540},"end":{"line":34,"column":15,"offset":554},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"List all the colors registered with WordPress.","position":{"start":{"line":36,"column":1,"offset":556},"end":{"line":36,"column":47,"offset":602},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":556},"end":{"line":36,"column":47,"offset":602},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"import {useColors} from '@tinypixelco/wp-react-hooks'\n\nconst component = () => {\n  const [colors, setColors] = useColors()\n\n  return (\n    <div>\n      {colors && JSON.stringify(colors)}\n    </div>\n  )\n}","position":{"start":{"line":38,"column":1,"offset":604},"end":{"line":50,"column":4,"offset":817},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"addColor","position":{"start":{"line":52,"column":4,"offset":822},"end":{"line":52,"column":12,"offset":830},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":819},"end":{"line":52,"column":12,"offset":830},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Add a color to the palette.","position":{"start":{"line":54,"column":1,"offset":832},"end":{"line":54,"column":28,"offset":859},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":832},"end":{"line":54,"column":28,"offset":859},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"{addColor} = useColors()\n\naddColor({\n  name: \"New\",\n  slug: \"new\",\n  color: \"#0073a8\",\n})","position":{"start":{"line":56,"column":1,"offset":861},"end":{"line":64,"column":4,"offset":961},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"setColors","position":{"start":{"line":66,"column":4,"offset":966},"end":{"line":66,"column":13,"offset":975},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":963},"end":{"line":66,"column":13,"offset":975},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Replace the palette with a new one, or otherwise process the array and return what you like.","position":{"start":{"line":68,"column":1,"offset":977},"end":{"line":68,"column":93,"offset":1069},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":977},"end":{"line":68,"column":93,"offset":1069},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"{setColors} = useColors()\n\nsetColors([\n  {name: 'black', slug: 'black', color: '#000000'},\n  {name: 'white', slug: 'white', color: '#ffffff'},\n])","position":{"start":{"line":70,"column":1,"offset":1071},"end":{"line":77,"column":4,"offset":1227},"indent":[1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":79,"column":1,"offset":1229},"end":{"line":79,"column":31,"offset":1259},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":79,"column":31,"offset":1259}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/kellymears/code/projects/cli/bud/bud-sandbox/web/app/themes/wp-react-hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"usecolors\"\n    }}>{`useColors`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`useColors`}</inlineCode>{` hook provides an interface for consuming and modifying block editor settings.`}</p>\n    <h2 {...{\n      \"id\": \"basics\"\n    }}>{`Basics`}</h2>\n    <p><strong parentName=\"p\">{` Import `}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {useColors} from '@tinypixelco/wp-react-hooks'\n`}</code></pre>\n    <p><strong parentName=\"p\">{` Use `}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const {colors, setColors, addColor} = useColors()\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`{\n  name: \"Primary\",\n  slug: \"primary\",\n  color: \"#0073a8\",\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"list-colors\"\n    }}>{`List colors`}</h2>\n    <p>{`List all the colors registered with WordPress.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {useColors} from '@tinypixelco/wp-react-hooks'\n\nconst component = () => {\n  const [colors, setColors] = useColors()\n\n  return (\n    <div>\n      {colors && JSON.stringify(colors)}\n    </div>\n  )\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"addcolor\"\n    }}>{`addColor`}</h2>\n    <p>{`Add a color to the palette.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`{addColor} = useColors()\n\naddColor({\n  name: \"New\",\n  slug: \"new\",\n  color: \"#0073a8\",\n})\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setcolors\"\n    }}>{`setColors`}</h2>\n    <p>{`Replace the palette with a new one, or otherwise process the array and return what you like.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`{setColors} = useColors()\n\nsetColors([\n  {name: 'black', slug: 'black', color: '#000000'},\n  {name: 'white', slug: 'white', color: '#ffffff'},\n])\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}