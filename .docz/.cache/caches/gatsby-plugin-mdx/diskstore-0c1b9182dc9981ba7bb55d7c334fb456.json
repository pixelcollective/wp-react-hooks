{"expireTime":9007200849342701000,"key":"gatsby-plugin-mdx-entire-payload-0732c1c91fdc7716f89bbea36c29ba37-/wp-react-hooks","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/kellymears/code/projects/cli/bud/bud-sandbox/web/app/themes/wp-react-hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":160,"offset":161},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":163},"end":{"line":5,"column":29,"offset":191},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"useFontSizes","position":{"start":{"line":8,"column":3,"offset":196},"end":{"line":8,"column":15,"offset":208},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":194},"end":{"line":8,"column":15,"offset":208},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":10,"column":1,"offset":210},"end":{"line":10,"column":5,"offset":214},"indent":[]}},{"type":"inlineCode","value":"useFontSizes","position":{"start":{"line":10,"column":5,"offset":214},"end":{"line":10,"column":19,"offset":228},"indent":[]}},{"type":"text","value":" hook provides an interface for consuming and modifying the block editor preset font sizes.","position":{"start":{"line":10,"column":19,"offset":228},"end":{"line":10,"column":110,"offset":319},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":210},"end":{"line":10,"column":110,"offset":319},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Basics","position":{"start":{"line":12,"column":4,"offset":324},"end":{"line":12,"column":10,"offset":330},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":321},"end":{"line":12,"column":10,"offset":330},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" Import ","position":{"start":{"line":14,"column":3,"offset":334},"end":{"line":14,"column":11,"offset":342},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":332},"end":{"line":14,"column":13,"offset":344},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":332},"end":{"line":14,"column":13,"offset":344},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"import {useFontSizes} from '@tinypixelco/wp-react-hooks'","position":{"start":{"line":16,"column":1,"offset":346},"end":{"line":18,"column":4,"offset":413},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" Use ","position":{"start":{"line":20,"column":3,"offset":417},"end":{"line":20,"column":8,"offset":422},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":415},"end":{"line":20,"column":10,"offset":424},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":415},"end":{"line":20,"column":10,"offset":424},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"const {fontSizes, setFontSizes, addColor} = useFontSizes()","position":{"start":{"line":22,"column":1,"offset":426},"end":{"line":24,"column":4,"offset":495},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" The ","position":{"start":{"line":26,"column":3,"offset":499},"end":{"line":26,"column":8,"offset":504},"indent":[]}},{"type":"inlineCode","value":"fontSizes","position":{"start":{"line":26,"column":8,"offset":504},"end":{"line":26,"column":19,"offset":515},"indent":[]}},{"type":"text","value":" array is made up of objects that are shaped like this ","position":{"start":{"line":26,"column":19,"offset":515},"end":{"line":26,"column":74,"offset":570},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":497},"end":{"line":26,"column":76,"offset":572},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":497},"end":{"line":26,"column":76,"offset":572},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"{\n  name: 'Small',\n  shortName: 's',\n  size: 8,\n  slug: 'small',\n}","position":{"start":{"line":28,"column":1,"offset":574},"end":{"line":35,"column":4,"offset":651},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"List font sizes","position":{"start":{"line":37,"column":4,"offset":656},"end":{"line":37,"column":19,"offset":671},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":653},"end":{"line":37,"column":19,"offset":671},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"List all the font sizes registered with WordPress.","position":{"start":{"line":39,"column":1,"offset":673},"end":{"line":39,"column":51,"offset":723},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":673},"end":{"line":39,"column":51,"offset":723},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"import {useFontSizes} from '@tinypixelco/wp-react-hooks'\n\nconst component = () => {\n  const [fontSizes] = useFontSizes()\n\n  return (\n    <div>\n      {fontSizes && JSON.stringify(fontSizes)}\n    </div>\n  )\n}","position":{"start":{"line":41,"column":1,"offset":725},"end":{"line":53,"column":4,"offset":942},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"addFontSize","position":{"start":{"line":55,"column":4,"offset":947},"end":{"line":55,"column":15,"offset":958},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":944},"end":{"line":55,"column":15,"offset":958},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Add a font size to the existing presets.","position":{"start":{"line":57,"column":1,"offset":960},"end":{"line":57,"column":41,"offset":1000},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":960},"end":{"line":57,"column":41,"offset":1000},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"{addFontSize} = useFontSizes()\n\naddFontSize({\n  name: 'Dynamic',\n  shortName: 'd',\n  size: 69,\n  slug: 'dynamic',\n})","position":{"start":{"line":59,"column":1,"offset":1002},"end":{"line":68,"column":4,"offset":1129},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"setFontSizes","position":{"start":{"line":70,"column":4,"offset":1134},"end":{"line":70,"column":16,"offset":1146},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1131},"end":{"line":70,"column":16,"offset":1146},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Replace the preset sizes with a new set.","position":{"start":{"line":72,"column":1,"offset":1148},"end":{"line":72,"column":41,"offset":1188},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1148},"end":{"line":72,"column":41,"offset":1188},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"{setFontSizes} = useFontSizes()\n\nsetFontSizes([\n  {\n    name: 'Dynamic',\n    shortName: 'd',\n    size: 69,\n    slug: 'dynamic',\n  },\n])\n\n### addFontSize\n\n```jsx\n{fontSizes, setFontSizes} = useFontSizes()\n\nconst newFontSize = {\n  name: 'Dynamic',\n  shortName: 'd',\n  size: 69,\n  slug: 'dynamic',\n}\n\nuseEffect(() => {\n  setSettings({\n    fontSizes: [\n      ...fontSizes,\n      newFontSize,\n    ],\n  })\n}, [])","position":{"start":{"line":74,"column":1,"offset":1190},"end":{"line":106,"column":4,"offset":1607},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"\nexport const _frontmatter = {}","position":{"start":{"line":107,"column":1,"offset":1608},"end":{"line":109,"column":31,"offset":1643},"indent":[1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":109,"column":31,"offset":1643}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/kellymears/code/projects/cli/bud/bud-sandbox/web/app/themes/wp-react-hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\"\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"usefontsizes\"\n    }}>{`useFontSizes`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`useFontSizes`}</inlineCode>{` hook provides an interface for consuming and modifying the block editor preset font sizes.`}</p>\n    <h2 {...{\n      \"id\": \"basics\"\n    }}>{`Basics`}</h2>\n    <p><strong parentName=\"p\">{` Import `}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {useFontSizes} from '@tinypixelco/wp-react-hooks'\n`}</code></pre>\n    <p><strong parentName=\"p\">{` Use `}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const {fontSizes, setFontSizes, addColor} = useFontSizes()\n`}</code></pre>\n    <p><strong parentName=\"p\">{` The `}<inlineCode parentName=\"strong\">{`fontSizes`}</inlineCode>{` array is made up of objects that are shaped like this `}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`{\n  name: 'Small',\n  shortName: 's',\n  size: 8,\n  slug: 'small',\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"list-font-sizes\"\n    }}>{`List font sizes`}</h2>\n    <p>{`List all the font sizes registered with WordPress.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {useFontSizes} from '@tinypixelco/wp-react-hooks'\n\nconst component = () => {\n  const [fontSizes] = useFontSizes()\n\n  return (\n    <div>\n      {fontSizes && JSON.stringify(fontSizes)}\n    </div>\n  )\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"addfontsize\"\n    }}>{`addFontSize`}</h2>\n    <p>{`Add a font size to the existing presets.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`{addFontSize} = useFontSizes()\n\naddFontSize({\n  name: 'Dynamic',\n  shortName: 'd',\n  size: 69,\n  slug: 'dynamic',\n})\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setfontsizes\"\n    }}>{`setFontSizes`}</h2>\n    <p>{`Replace the preset sizes with a new set.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`{setFontSizes} = useFontSizes()\n\nsetFontSizes([\n  {\n    name: 'Dynamic',\n    shortName: 'd',\n    size: 69,\n    slug: 'dynamic',\n  },\n])\n\n### addFontSize\n\n\\`\\`\\`jsx\n{fontSizes, setFontSizes} = useFontSizes()\n\nconst newFontSize = {\n  name: 'Dynamic',\n  shortName: 'd',\n  size: 69,\n  slug: 'dynamic',\n}\n\nuseEffect(() => {\n  setSettings({\n    fontSizes: [\n      ...fontSizes,\n      newFontSize,\n    ],\n  })\n}, [])\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`\nexport const _frontmatter = {}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}