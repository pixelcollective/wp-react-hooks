(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{EI5n:function(e,o,t){"use strict";t.r(o),t.d(o,"_frontmatter",(function(){return c})),t.d(o,"default",(function(){return i}));var n=t("Fcif"),r=t("+I+c"),a=(t("mXGw"),t("/FXl")),s=t("TjRS"),c=(t("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/hooks/useColors.mdx"}});var l={_frontmatter:c},b=s.a;function i(e){var o=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)(b,Object(n.a)({},l,t,{components:o,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"usecolors"},"useColors"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"useColors")," hook provides an interface for consuming and modifying the block editor color palette."),Object(a.b)("h2",{id:"basics"},"Basics"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"}," Import ")),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"import {useColors} from '@tinypixelco/wp-react-hooks'\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"}," Use ")),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"const {colors, setColors, addColor} = useColors()\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"}," The ",Object(a.b)("inlineCode",{parentName:"strong"},"colors")," array is made up of objects that are shaped like this ")),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'{\n  name: "Primary",\n  slug: "primary",\n  color: "#0073a8",\n}\n')),Object(a.b)("h2",{id:"list-colors"},"List colors"),Object(a.b)("p",null,"List all the colors registered with WordPress."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"import {useColors} from '@tinypixelco/wp-react-hooks'\n\nconst component = () => {\n  const [colors] = useColors()\n\n  return (\n    <div>\n      {colors && JSON.stringify(colors)}\n    </div>\n  )\n}\n")),Object(a.b)("h2",{id:"addcolor"},"addColor"),Object(a.b)("p",null,"Add a color to the palette."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'{addColor} = useColors()\n\naddColor({\n  name: "New",\n  slug: "new",\n  color: "#0073a8",\n})\n')),Object(a.b)("h2",{id:"setcolors"},"setColors"),Object(a.b)("p",null,"Replace the palette with a new one, or otherwise process the array and return what you like."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"{setColors} = useColors()\n\nsetColors([\n  {name: 'black', slug: 'black', color: '#000000'},\n  {name: 'white', slug: 'white', color: '#ffffff'},\n])\n")))}void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/hooks/useColors.mdx"}}),i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-hooks-use-colors-mdx-880e2c59cbbae3167dbd.js.map