{"version":3,"sources":["webpack:///../src/hooks/useBlocks.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"uPAMaA,G,UAAe,S,yMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,aADR,aAGA,4BAAW,0BAAYC,WAAW,KAAvB,aAAX,4CACA,iBAAQ,CACN,GAAM,UADR,UAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,4DAIL,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,0CAIL,iBAAQ,CACN,GAAM,YADR,YAGA,iBAAQ,CACN,GAAM,0CADR,OAEW,0BAAYA,WAAW,MAAvB,UAFX,gCAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,uOAcL,iBAAQ,CACN,GAAM,wCADR,wCAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,+M,uMAkBTJ,EAAWK,gBAAiB","file":"component---src-hooks-use-blocks-mdx-70d2b4691790411cfa0f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kellymears/code/projects/cli/bud/bud-sandbox/web/app/themes/wp-react-hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"useblocks\"\n    }}>{`useBlocks`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`useBlocks`}</inlineCode>{` hook returns the current active blocks.`}</p>\n    <h2 {...{\n      \"id\": \"import\"\n    }}>{`Import`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {useBlocks} from '@tinypixelco/wp-react-hooks'\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const {blocks, count} = useBlocks()\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"use-blocks-to-list-blocks-used-in-post\"\n    }}>{`Use `}<inlineCode parentName=\"h3\">{`blocks`}</inlineCode>{` to list blocks used in post`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {useBlocks} from '@tinypixelco/wp-react-hooks'\n\nconst component = () => {\n  const {blocks} = useBlocks()\n\n  return (\n    <ul>\n      {blocks.map((block, id) => <li key={id}>{block.name}</li>)}\n    </ul>\n  )\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"display-count-of-blocks-used-in-post\"\n    }}>{`Display count of blocks used in post`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {useBlocks} from '@tinypixelco/wp-react-hooks'\n\nconst component = () => {\n  const {count} = useBlocks()\n\n  return (\n    <div>\n      Blocks used: {count || null}\n    </div>\n  )\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}